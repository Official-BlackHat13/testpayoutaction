#get balance
-- DELIMITER &&
-- create PROCEDURE getBalance(in merchant_id int,out balance int,out cred1 int,out deb1 int)
-- begin
-- Call getAmount("credited",merchant_id,@cred);
-- Call getAmount("debited",merchant_id,@deb);

-- if (isnull(@cred)) then
-- set cred1=0;

-- else
-- set cred1 = @cred;
-- end if;
-- if (isnull(@deb)) then
-- set deb1=0;

-- else
-- set deb1 = @deb;
-- end if;

-- select cred1-deb1 into balance;

-- end 
-- && DELIMITER ;
#get amount
-- DELIMITER &&
-- create PROCEDURE getAmount(in type varchar(20),in merchant_id int,out value int)
-- begin
-- select sum(amount) into value from apis_transactionhistorymodel where trans_amount_type=type and merchant=merchant_id and trans_status in ("Success","Pending","Requested","Proccesing");
-- end 
-- && DELIMITER ;
--DELIMITER $$
--CREATE DEFINER=`root`@`localhost` PROCEDURE `fet`(IN n varchar(1000), m int(11))
--BEGIN
--select * from apis_transactionhistorymodel where (customer_ref_no = n OR trans_amount_type = n OR client_code = n) AND (merchant = m) ;
--END$$
--DELIMITER ;

-- DELIMITER &&
-- create PROCEDURE getRoleType(in merchant_id int)
-- begin
-- select apis_rolemodel.role_name from apis_merchantmodel  inner join apis_rolemodel on apis_merchantmodel.role=apis_rolemodel.id where apis_merchantmodel.id=merchant_id;
-- end 
-- DELIMITER &&
-- create PROCEDURE getLedger(in length int,in page int)
-- begin

-- -- DECLARE  balance int;
-- -- DECLARE  merchants int;
-- -- DECLARE  totaltrans int;
-- declare endpage int;
-- declare page_val int;
-- select page-1 into page_val;
-- select page*length into endpage;

-- create view tempcredview as select sum(amount) as amount,count(*) as totaltrans,merchant  from apis_transactionhistorymodel where trans_amount_type="credited" group by merchant;
-- create view tempdebview as select sum(amount) as amount,count(*) as totaltrans,merchant  from apis_transactionhistorymodel where trans_amount_type="debited" group by merchant;

-- create view tempview as select tempcredview.amount-ifnull(tempdebview.amount,0) as balance, tempcredview.totaltrans+ifnull(tempdebview.totaltrans,0) as totaltrans,tempcredview.merchant from tempcredview left join tempdebview on tempcredview.merchant=tempdebview.merchant;
-- select apis_merchantmodel.client_username,tempview.balance,tempview.totaltrans,apis_merchantmodel.id from tempview inner join apis_merchantmodel on tempview.merchant=apis_merchantmodel.id where apis_merchantmodel.status=true limit page_val,endpage;
-- drop view tempcredview;
-- drop view tempdebview;
-- drop view tempview;
-- -- select endpage;
-- end 
-- && DELIMITER ;